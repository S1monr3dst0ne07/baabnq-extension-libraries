
use 'libs/tests/common.baabnq';

use 'ext/expr/token.baabnq';


lab Local::TestExpr::Init;
    sub Expr::Token::ModuleInit;
return;


lab TestExpr::Token::ModuleInit;
    sub Local::TestExpr::Init;

    jump fail ~ _Expr::Token::Source != 0;

    "token should be a buffer
    jump fail ~ _Expr::Token::Token  == 0;

    jump succ;

lab TestExpr::Token::GetCharType;
    sub Local::TestExpr::Init;

    "space -> OTHER = 0
    static ' ' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 0;

    "alpha -> OTHER = 0
    static 'A' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 0;



    "plus -> SYMBOL = 1
    static '+' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 1;

    "minus -> SYMBOL = 1
    static '-' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 1;

    "times -> SYMBOL = 1
    static '*' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 1;

    "over -> SYMBOL = 1
    static '/' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 1;

    "i'm not gonna do all the numbers
     
    "zero -> NUMBER = 2
    static '0' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 2;

    "five -> NUMBER = 2
    static '5' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 2;

    "nine -> NUMBER = 2
    static '9' _Expr::Token::Source;
    push __; sub Expr::Token::GetCharType;
    pull __; 
    jump fail ~ __ != 2;


    jump succ;


lab TestExpr::Token::Next;
    sub Local::TestExpr::Init;

    static '  (( 123 * 564 / 987 -+ ) MEOW' _Expr::Token::Source;

    static '((' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '123' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '*' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '564' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '/' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '987' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static '-+' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    static ')' __; push __;
    sub Expr::Token::Next; push _Expr::Token::Token;
    sub String::StrCmp; pull __;
    jump fail ~ __ != 0;

    jump succ;



