
use 'libs/tests/common.baabnq';


lab Local::TestDynList::Init;
    use 'ext/dynlist.baabnq';
return;



lab TestDynList::CreatePopulate;
    sub Local::TestDynList::Init;

    push 123;
    push 321;
    sub DynList::CreatePopulate;
    pull _pList;


    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 123;
    put __ <- _pList + _DynList::List::CONTAINER;
    jump fail ~ __ != 321;

    free _pList;
    jump succ;


lab TestDynList::CreatePopulateInferSize;
    sub Local::TestDynList::Init;

    new 10 _pContainer;

    push _pContainer;
    sub DynList::CreatePopulateInferSize;
    pull _pList;

    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 10;
    put __ <- _pList + _DynList::List::CONTAINER;
    jump fail ~ __ != _pContainer;

    push _pList; sub DynList::Delete;
    jump succ;


lab TestDynList::CreateEmpty;
    sub Local::TestDynList::Init;

    sub DynList::CreateEmpty;
    pull _pList;

    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 0;

    put __ <- _pList + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 0;

    push _pList; sub DynList::Delete;
    jump succ;




lab TestDynList::CreateCopyChunk;
    sub Local::TestDynList::Init;

    new 10 _pContainer;

    push _pContainer;
    sub DynList::CreateCopyChunk;
    pull _pList;

    free _pContainer;



    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 10;
    put __ <- _pList + _DynList::List::CONTAINER;
    jump fail ~ __ != _pContainer;

    push _pList; sub DynList::Delete;
    jump succ;


lab TestDynList::CreateCopyList;
    sub Local::TestDynList::MakeTestList;
    pull _pSrc;

    push _pSrc;
    sub DynList::CreateCopyList;
    pull _pDst;

    push _pSrc; sub DynList::Delete;



    put __ <- _pDst + _DynList::List::SIZE;
    jump fail ~ __ != 4;

    put __ <- _pDst + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 6;

    push _pDst; sub DynList::Delete;
    jump succ;







lab Local::TestDynList::MakeTestList;
    sub Local::TestDynList::Init;

    new 'test ' _p;

    push 4;
    push _p;
    sub DynList::CreatePopulate;

    sub Stack::Swap;
    return;



lab TestDynList::Size;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    sub DynList::Size;
    pull _size;
    jump fail ~ _size != 4;

    push _pList; sub DynList::Delete;
    jump succ;


lab TestDynList::Container;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    sub DynList::Container;
    pull _pContainer;

    put __ <- _pList + _DynList::List::CONTAINER;

    jump fail ~ _pContainer != __;

    push _pList; sub DynList::Delete;
    jump succ;






lab TestDynList::ChangeCapacity;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    push 10;
    sub DynList::ChangeCapacity;

    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 4;

    put __ <- _pList + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 10;

    push _pList; sub DynList::Delete;
    jump succ;



lab TestDynList::Reserve;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    push 10;
    sub DynList::Reserve;

    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 4;

    put __ <- _pList + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 10;


    "shouldn't do anything,
    "because reserve only increases the capacity,
    "and doesn't decreases it
    push _pList;
    push 5;
    sub DynList::Reserve;

    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 4;

    put __ <- _pList + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 10;


    push _pList; sub DynList::Delete;
    jump succ;



lab TestDynList::ShrinkToFit;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    sub DynList::ShrinkToFit;


    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 4;

    put __ <- _pList + _DynList::List::CONTAINER;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 4;

    jump succ;


    
lab TestDynList::Clear;
    sub Local::TestDynList::MakeTestList;
    pull _pList;

    push _pList;
    sub DynList::Clear;


    put __ <- _pList + _DynList::List::SIZE;
    jump fail ~ __ != 0;

    put _pContainer <- _pList + _DynList::List::CONTAINER;
    push _pContainer; sub Chunk::Len; pull __;
    jump fail ~ __ != 6;

    put __ <- _pContainer;
    jump fail ~ __ != 0;

    jump succ;
