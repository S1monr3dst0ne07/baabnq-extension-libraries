
use 'libs/tests/common.baabnq';
use 'libs/chunk.baabnq';

lab Local::TestRingbuf::Init;
    use 'ext/ringbuf.baabnq';
return;



lab TestRingbuf::Allocate;
    sub Local::TestRingbuf::Init;

    sub Ringbuf::Allocate;
    pull _pRing;

    put __ <- _pRing + _Ringbuf::Ringbuf::SIZE     ; jump fail ~ __ != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::HEAD     ; jump fail ~ __ != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::TAIL     ; jump fail ~ __ != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::END      ; jump fail ~ __ != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::CONTAINER; jump fail ~ __ != 0; 
    
    jump succ;


lab TestRingbuf::Create;
    sub Local::TestRingbuf::Init;

    push 10;
    sub Ringbuf::Create;
    pull _pRing;

    put _pContainer <- _pRing + _Ringbuf::Ringbuf::CONTAINER;
    put _pWhatEndShouldBe = _pContainer + 10 - 1;
    push _pContainer; sub Chunk::Len; pull __; jump fail ~ __ != 10;
    
    put __ <- _pRing + _Ringbuf::Ringbuf::SIZE; jump fail ~ __ != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::HEAD; jump fail ~ __ != _pContainer;
    put __ <- _pRing + _Ringbuf::Ringbuf::TAIL; jump fail ~ __ != _pContainer;
    put __ <- _pRing + _Ringbuf::Ringbuf::END ; jump fail ~ __ != _pWhatEndShouldBe; 

    jump succ;




lab TestRingbuf::Container;
    sub Local::TestRingbuf::Init;

    push 10;
    sub Ringbuf::Create;    
    pull _pRing;

    push _pRing; sub Ringbuf::Container; pull _pContainerLookedup;
    put _pContainerReal <- _pRing + _Ringbuf::Ringbuf::CONTAINER;

    jump fail ~ _pContainerReal != _pContainerLookedup;
    
    jump succ;


lab TestRingbuf::Size;
    sub Local::TestRingbuf::Init;
    
    push 10;
    sub Ringbuf::Create;
    pull _pRing;

    push _pRing;
    sub Ringbuf::Size;
    pull __;
    jump fail ~ __ != 0;

    put 100 -> _pRing + _Ringbuf::Ringbuf::SIZE;

    push _pRing;
    sub Ringbuf::Size;
    pull __;
    jump fail ~ __ != 100;

    jump succ;






lab TestRingbuf::AdvancePtr;
    sub Local::TestRingbuf::Init;

    push 2;
    sub Ringbuf::Create;
    pull _pRing;

    push _pRing; sub Ringbuf::Container; pull _pContainer;

    push _pRing;
    push _pRing + _Ringbuf::Ringbuf::HEAD;
    sub Ringbuf::AdvancePtr;

    push _pRing;
    push _pRing + _Ringbuf::Ringbuf::TAIL;
    sub Ringbuf::AdvancePtr;
 
    put __ <- _pRing + _Ringbuf::Ringbuf::HEAD; jump fail ~ (__ - _pContainer) != 1; 
    put __ <- _pRing + _Ringbuf::Ringbuf::TAIL; jump fail ~ (__ - _pContainer) != 1; 


    push _pRing;
    push _pRing + _Ringbuf::Ringbuf::HEAD;
    sub Ringbuf::AdvancePtr;

    push _pRing;
    push _pRing + _Ringbuf::Ringbuf::TAIL;
    sub Ringbuf::AdvancePtr;
 
    put __ <- _pRing + _Ringbuf::Ringbuf::HEAD; jump fail ~ (__ - _pContainer) != 0; 
    put __ <- _pRing + _Ringbuf::Ringbuf::TAIL; jump fail ~ (__ - _pContainer) != 0; 


    jump succ;


lab TestRingbuf::Delete;
    sub Local::TestRingbuf::Init;

    push 10;
    sub Ringbuf::Create;
    sub Ringbuf::Delete;

    jump succ;


lab TestRingbuf::Put;
    sub Local::TestRingbuf::Init;

    push 3;
    sub Ringbuf::Create;
    pull _pRing;

    push _pRing; push 1; sub Ringbuf::Put;
    push _pRing; push 2; sub Ringbuf::Put;
    push _pRing; push 3; sub Ringbuf::Put;
    push _pRing; push 4; sub Ringbuf::Put;
    push _pRing; push 5; sub Ringbuf::Put;

    push _pRing; sub Ringbuf::Container; pull _pContainer;

    put __ <- _pContainer + 0; jump fail ~ __ != 1;
    put __ <- _pContainer + 1; jump fail ~ __ != 2;
    put __ <- _pContainer + 2; jump fail ~ __ != 3;

    jump succ;




