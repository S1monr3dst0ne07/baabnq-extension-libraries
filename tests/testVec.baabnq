
use 'libs/tests/common.baabnq';
use 'ext/vec.baabnq';

lab Local::TestVec::Init;
    sub Vec::ModuleInit;
return;

lab TestVec::Create;
    sub Local::TestVec::Init;

    push 10;
    sub Vec::Create;
    pull _pVec;

    push _pVec; sub Chunk::Len; pull _size;
    jump fail ~ _size != 10;

    put _i = 0;
    lab Local::TestVec::Create::Loop;
        put __ <- _pVec + _i;
        jump fail ~ __ != _Floats::Zero;

        put _i = _i + 1;
    jump Local::TestVec::Create::Loop ~ _i < _size;


    jump succ;


lab TestVec::Delete;
    sub Local::TestVec::Init;

    push 3;
    sub Vec::Create;
    sub Vec::Delete;

    jump succ;



lab TestVec::Dim;
    sub Local::TestVec::Init;

    push 10;
    sub Vec::Create;
    pull _pVec;

    push _pVec;
    sub Vec::Dim;
    pull __;
    jump fail ~ __ != 10;

    jump succ;

lab TestVec::Copy;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    put 00 -> _pVec + 0;
    put 10 -> _pVec + 1;
    put 20 -> _pVec + 2;
    put 00 -> _pVec + 3;

    sub Vec::Copy;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;




lab TestVec::Add;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    push 0; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;
    static 4 _pVec; push _pVec;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Vec::Add;

    static 4 _pVec; push _pVec;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;


lab TestVec::Neg;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    push 0; sub Floats::Value2Fp;                       pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp; sub Floats::SetSign;  pull __; put __ -> _pVec + 1;
    push 2; sub Floats::Value2Fp;                       pull __; put __ -> _pVec + 2;
    push 3; sub Floats::Value2Fp; sub Floats::SetSign;  pull __; put __ -> _pVec + 3;

    sub Vec::Neg;

    static 4 _pVec; push _pVec;
    push 0; sub Floats::Value2Fp; sub Floats::SetSign;  pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp;                       pull __; put __ -> _pVec + 1;
    push 2; sub Floats::Value2Fp; sub Floats::SetSign;  pull __; put __ -> _pVec + 2;
    push 3; sub Floats::Value2Fp;                       pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;



lab TestVec::Mul;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec; push _pVec;
    push 0; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Vec::Mul;

    static 4 _pVec; push _pVec;
    push 0; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 9; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;



lab TestVec::Div;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    push 10; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 21; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 24; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 25; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;
    static 4 _pVec; push _pVec;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 5; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Vec::Div;

    static 4 _pVec; push _pVec;
    push 5; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 7; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 6; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 5; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;

lab TestVec::Scale;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    push 0; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 6; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 9; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    push 2;
    sub Floats::Value2Fp;
    sub Vec::Scale;

    static 4 _pVec; push _pVec;
    push 0;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 6;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 12; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 18; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;

lab TestVec::InvScale;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec; push _pVec;
    push 100; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 6;   sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 12;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 18;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    push 2;
    sub Floats::Value2Fp;
    sub Vec::InvScale;

    static 4 _pVec; push _pVec;
    push 50; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 3;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 6;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 9;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Chunk::Cmp;
    pull __;
    jump fail ~ __ != 1;

    jump succ;


lab TestVec::Sum;
    sub Local::TestVec::Init;

    static 4 _pVec; push _pVec;
    push 1; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 8; sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;

    sub Vec::Sum;
    sub Floats::Fp2Value;
    pull __;
    jump fail ~ __ != 15;

    jump succ;


lab TestVec::Dot;
    sub Local::TestVec::Init;

    static 2 _pVec; push _pVec;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;

    static 2 _pVec; push _pVec;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 2; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;

    sub Vec::Dot;
    sub Floats::Fp2Value;
    pull __;
    jump fail ~ __ != 16;

    jump succ;

lab TestVec::Length;
    sub Local::TestVec::Init;

    "pythagoras senpai~
    static 2 _pVec; push _pVec;
    push 3; sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 4; sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;

    sub Vec::Length;
    sub Floats::Fp2Value;
    pull __;
    jump fail ~ __ != 5;

    jump succ;


lab TestVec::Normalize;
    sub Local::TestVec::Init;

    static 5 _pVec; push _pVec; push _pVec;
    push 5;   sub Floats::Value2Fp; pull __; put __ -> _pVec + 0;
    push 4;   sub Floats::Value2Fp; pull __; put __ -> _pVec + 1;
    push 10;  sub Floats::Value2Fp; pull __; put __ -> _pVec + 2;
    push 9;   sub Floats::Value2Fp; pull __; put __ -> _pVec + 3;
    push 200; sub Floats::Value2Fp; pull __; put __ -> _pVec + 4;

    sub Vec::Normalize;
    sub Vec::Length;

    sub Floats::Fp2Value;
    pull __;
    jump fail ~ __ != 1;

    jump succ;


