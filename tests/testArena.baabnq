
use 'libs/tests/common.baabnq';
use 'libs/chunk.baabnq';
use 'ext/arena.baabnq';


lab Local::TestArena::Init;
    sub Arena::ModuleInit;
return;



lab TestArena::Allocate;
    sub Local::TestArena::Init;

    sub Arena::Allocate;
    pull _pArena;

    push _pArena; sub Chunk::Len; pull __;
    jump fail ~ __ != 2;

    put __ <- _pArena + _Arena::Arena::MEMORY; jump fail ~ __ != 0;
    put __ <- _pArena + _Arena::Arena::INDEX;  jump fail ~ __ != 0;

    jump succ;


lab TestArena::Create;
    sub Local::TestArena::Init;

    push 123;
    sub Arena::Create;
    pull _pArena;

    push _pArena; sub Chunk::Len; pull __;
    jump fail ~ __ != 2;

    put __ <- _pArena + _Arena::Arena::MEMORY;
    push __; sub Chunk::Len; pull __;
    jump fail ~ __ != 123;

    put __ <- _pArena + _Arena::Arena::INDEX;  jump fail ~ __ != 0;

    jump succ;



lab TestArena::GetMemory;
    sub Local::TestArena::Init;

    push 10;
    sub Arena::Create;
    pull _pArena;

    push _pArena; sub Arena::GetMemory; pull _pMemory;
    put __ <- _pArena + _Arena::Arena::MEMORY;

    jump fail ~ _pMemory != __;

    jump succ;



lab TestArena::GetIndex;
    sub Local::TestArena::Init;

    push 10;
    sub Arena::Create;
    pull _pArena;

    put 123 -> _pArena + _Arena::Arena::INDEX;
    push _pArena; sub Arena::GetIndex; pull _index;

    jump fail ~ _index != 123;

    jump succ;


lab TestArena::Delete;
    sub Local::TestArena::Init;

    push 10;
    sub Arena::Create;
    sub Arena::Delete;

    jump succ;






