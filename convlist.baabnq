
use 'ext/dynlist.baabnq';
use 'ext/linklist.baabnq';



jump ConvList::Skip;


"(::LinkList) => (::DynList)
lab ConvList::LinkListToDynList;
lab ConvList::LinkToDyn;
lab ConvList::L2D;
    sub Stack::Swap;
    pull _pLinkList;

    "create dynlist
    sub DynList::CreateEmpty;
    pull _pDynList;

    "equalize capacity
    push _pDynList;
    push _pLinkList; sub LinkList::Container::Size;
    sub DynList::Reserve;

    "iterate reverse
    push _pLinkList; sub LinkList::Container::Size; pull _i;
    lab ConvList::LinkListToDynList::Loop;
        jump ConvList::LinkListToDynList::Done ~ _i == 0;
        put _i = _i - 1;

        push _pDynList;
            push _pLinkList;
            sub LinkList::Container::PopFront;
        sub DynList::PushBack;

        jump ConvList::LinkListToDynList::Loop;
    lab ConvList::LinkListToDynList::Done;

    "dealloc
    push _pLinkList;
    sub LinkList::Container::Delete;

    push _pDynList;
    sub Stack::Swap;
    return;



"(::DynList) => (::LinkList) 
lab ConvList::DynListToLinkList;
lab ConvList::DynToLink;
lab ConvList::D2L;
    sub Stack::Swap;
    pull _pDynList;

    "create linklist
    sub LinkList::Container::Create;
    pull _pLinkList;

    "iterate
    push _pDynList; sub LinkList::Container::Size; pull _i;
    lab ConvList::DynListToLinkList::Loop;
        jump ConvList::DynListToLinkList::Done ~ _i == 0;
        put _i = _i - 1;

        push _pLinkList;
            push _pDynList;
            sub DynList::PopBack;
        sub LinkList::Container::PushFront;

        jump ConvList::DynListToLinkList::Loop;
    lab ConvList::DynListToLinkList::Done;

    "dealloc
    push _pDynList;
    sub DynList::Delete;

    push _pLinkList;
    sub Stack::Swap;
    return;



lab ConvList::Skip;


